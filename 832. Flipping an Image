// 先将数组0变成1，1变成0，然后交换顺序
class Solution {
    public int[][] flipAndInvertImage(int[][] A) {
        for(int i = 0; i<A.length; i++){
            for(int j = 0; j<A[i].length; j++){
                if(A[i][j]==0){
                    A[i][j] = 1;
                }
                else{
                    A[i][j] = 0;
                }
            }
        }
        for(int i = 0 ; i<A.length; i++){
            int a = 0;
            int b = A[i].length - 1;
            while(a<b) {
                int temp = A[i][a];
                A[i][a] = A[i][b];
                A[i][b] = temp;
                a++;
                b--;
            }
            
        }
        return A;
    }
    
}

//方法二，同时做0，1转换且交换位置
//^表示2进制，如果数字相同为零，不同为1， 在此处用于0，1转换
//int[] b:A 表示取每个子数组从二维数组A中
//在循环中，是参数到数组中点，然后交换前后顺序
class Solution {
    public int[][] flipAndInvertImage(int[][] A) {
        int c = A[0].length;
        for(int[] b : A){
            for(int i = 0; i<=(c-1)/2; i++){
            int temp = b[i]^1;
                b[i] = b[c-1-i]^1;
                b[c-1-i] = temp;
            }
        }
        
        return A;
    }
    
}
