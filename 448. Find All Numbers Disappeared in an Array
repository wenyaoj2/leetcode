class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        ArrayList<Integer> result = new ArrayList();
        HashSet<Integer> all = new HashSet();
        for(int i = 0; i< nums.length; i++){
            all.add(nums[i]);
        }
        for(int j = 1; j<=nums.length; j++){
            if(!all.contains(j)){
                result.add(j);
            }
        }
        return result;
    }
}
//方法二 将数组中出现的数字以位置的身为记录，再看没有更改的位置确定生于数字
class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        ArrayList<Integer> result = new ArrayList();
        for(int i = 0; i<nums.length;i++){
            int val = Math.abs(nums[i])-1;
            if(nums[val]>0){
                nums[val] = -nums[val];
            }
            
        }
        for(int i =0; i<nums.length; i++){
            if(nums[i]>0){
                result.add(i+1);
            }
        }
        return result;
    }
}
