class Solution {
    public String[] findRestaurant(String[] list1, String[] list2) {
        Map<String,Integer> ans = new HashMap();
        Map<Integer, ArrayList<String>> ans1 = new HashMap();
        ArrayList<String> last = new ArrayList();
        int count = 2000;
        for(int i = 0; i<list1.length;i++){
            ans.put(list1[i],i);
        }
        for(int j = 0; j<list2.length;j++){
            if(ans.containsKey(list2[j])){
                last.add(list2[j]);
                if(!ans1.containsKey(j+ans.get(list2[j]))){
                    ans1.put(j+ans.get(list2[j]),new ArrayList());
                    ans1.get(j+ans.get(list2[j])).add(list2[j]);
                }
                else{
                    
                    
                    ans1.get(j+ans.get(list2[j])).add(list2[j]);
                }
                
                
            }
        }
        for(int value:ans1.keySet()){
            count = Math.min(count,value);
        }
        String[] result = (String[]) ans1.get(count).toArray(new String[ans1.get(count).size()]);
        return result;
    }
}

方法二
class Solution {
    public String[] findRestaurant(String[] list1, String[] list2) {
        Map<String,Integer> ans = new HashMap();
        ArrayList<String> last = new ArrayList();
        int count = 2000;
        int sum = 0;
        for(int i = 0; i<list1.length;i++){
            ans.put(list1[i],i);
        }
        for(int j = 0; j<list2.length;j++){
            if(ans.containsKey(list2[j])){
                sum = j+ans.get(list2[j]);
                if(sum<count){
                    last.clear();
                    last.add(list2[j]);
                    count = sum;
                }
                else if(sum==count){
                    last.add(list2[j]);
                }
                
                
                
            }
        }
        
        String[] result = (String[]) last.toArray(new String[last.size()]);
        return result;
    }
}
