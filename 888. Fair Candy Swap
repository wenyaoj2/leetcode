class Solution {
    public int[] fairCandySwap(int[] A, int[] B) {
        int sumA = 0;
        int sumB = 0;
        int substract = 0;
        int[] result = new int[2];
        for(int i = 0; i<A.length; i++){
            sumA = sumA+A[i];
        }
        for(int j = 0; j<B.length; j++){
            sumB = sumB+B[j];        
        }
        substract = (sumA- sumB)/2;
        for(int i = 0; i<A.length;i++){
            for(int j = 0; j<B.length;j++){
                if(A[i]-B[j]==substract){
                    result[0] = A[i];
                    result[1] = B[j];
                }
            }
        }
        return result;
    }
}
// 使用Hashset的方法
class Solution {
    public int[] fairCandySwap(int[] A, int[] B) {
        int sumA = 0;
        int sumB = 0;
        int substract = 0;
        int[] result = new int[2];
        for(int i = 0; i<A.length; i++){
            sumA = sumA+A[i];
        }
        for(int j = 0; j<B.length; j++){
            sumB = sumB+B[j];        
        }
        substract = (sumA- sumB)/2;
        Set<Integer> nset = new HashSet();
        for(int i : B){
            nset.add(i);
        }
        for(int j: A){
            if(nset.contains(j-substract)){
                result[0] = j;
                result[1] = j-substract;
                return result;
            }
        }
        return result;
    }
}
