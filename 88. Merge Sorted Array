class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if(n==0){
            return;
        }
        if(m==0){
            for(int k = 0; k<nums1.length;k++){
                nums1[k] = nums2[k];
            }
        }
        int i= m-1;
        int j = n-1;
        int point = 0;
        while(i>=0&&j>=0){
            if(nums1[i]>nums2[j]){
                nums1[nums1.length-point-1] = nums1[i];
                i--;
                point++;
            }
            else{
                nums1[nums1.length-point-1] = nums2[j];
                j--;
                point++;
            }
        }
        if(j>=0){
            for(int k = 0; k<j+1;k++){

                nums1[k] = nums2[k];

        }
        }
        
        return;
    }
}
方法二
class Solution {
    public void merge(int A[], int m, int B[], int n) {
    int i=m-1, j=n-1, k=m+n-1;
    while (i>-1 && j>-1) A[k--]= (A[i]>B[j]) ? A[i--] : B[j--];
    while (j>-1)         A[k--]=B[j--];
    return;
}
}
